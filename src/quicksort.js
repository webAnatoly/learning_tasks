// Практика: Быстрая сортировка

// Общая идея алгоритма состоит в следующем:

// Выбрать из списка элемент, называемый опорным. Это может быть любой из элементов списка 
// или же число, вычисленное на основе значений элементов.

// Сравнить все остальные элементы с опорным и переставить их в списке так, 
// чтобы разбить список на три непрерывных отрезка, следующих друг за другом: 
// «меньшие опорного», «равные» и «большие».

// Для отрезков «меньших» и «больших» значений выполнить рекурсивно ту же 
// последовательность операций, если длина отрезка больше единицы.

// На практике список обычно делят не на три, а на две части: например, 
// «меньшие опорного» и «равные и большие»; такой подход в общем случае эффективнее, так как упрощает алгоритм разделения.
// https://ru.hexlet.io/courses/sequences

const quicksort = (list) => {
  if (list.length <= 1) {
    return list;
  } else {
    const n = list[0];
    const small = [];
    const medium = [];
    const large = [];

    for (let i = 0; i < list.length; i++) {
      if (list[i] < n) { small.push(list[i]) }
      else if (list[i] > n) { large.push(list[i]) }
      else { medium.push(list[i]) }
    }
    return quicksort(small).concat(medium).concat(quicksort(large));
  }
}

export default quicksort;